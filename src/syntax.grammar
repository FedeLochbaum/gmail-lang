@precedence {
  and @left,
  or @left,
  minus @left,
  colon @left,
  cut @cut
}

@top Query { QueryFilter | FilterExpr }

@skip { whitespace }

QueryFilter { Filter MatchFilter? }

Filter { KeywordFilter | CompositeFilter | lparen Filter rparen }

CompositeFilter { Filter (Union | Intersection | Difference) Filter }

KeywordFilter { Keyword !colon colon Expr }

MatchFilter { Expr }

Expr { ID | String | ShortID | Date | Number | Email | lparen Expr rparen }

FilterExpr { FilterValue | ExactMatch }

FilterValue { ID | String | Email }

ExactMatch { "+" FilterValue }

Union[@name=Union] { !or or }
Intersection[@name=Intersection] { !and and }
Difference[@name=Difference] { !minus minus }

Number { number }
Date { date }
Email { email }
ID { variable }
ShortID { shortVariable }

Keyword {
  from | to | cc | bcc | subject | label | has | list |
  filename | after | before | older | newer | older_than |
  newer_than | is | in | deliveredto | category | size | larger | smaller
}

@tokens {
  @precedence {
    date, number, colon, or, and, minus, email, from, to, cc, bcc, subject, label, has, list, filename,
    after, before, older, newer, older_than, newer_than, is, in, deliveredto, category, size, larger,
    smaller, empty, variable, shortVariable, whitespace
  }

  identifierChar { std.asciiLetter | $[\.] | $[_$\u{a1}-\u{10ffff}] }
  word { identifierChar (identifierChar | std.digit)* }
  identifier { word }
  identifierWithSpaces { lVarDelimiter ![\n]* rVarDelimiter }

  variable { identifier }
  String { '"' (!["\\] | "\\" _)* '"' }
  number { ('+' | '-')? int frac? exp?  }
  int  { '0' | $[1-9] std.digit* }
  frac { dot std.digit+ }
  exp  { $[eE] $[+\-]? std.digit+ }
  date { dateFormat }
  dateFormat { int+ "/" int+ "/" int+ }
  email { variable "@" variable dot variable  }
  shortVariable { std.digit+ std.asciiLetter }
  
  lparen { "(" }
  rparen { ")" }
  colon { ":" }
  dot { '.' }

  minus { "-" }
  or { "or" | "OR" }
  and { "and" | "AND" }

  // whitespaces
  whitespace { std.whitespace+ }

  from[@name=From] { "from" }
  to[@name=To] { "to" }
  cc[@name=Cc] { "cc" }
  bcc[@name=Bcc] { "bcc" }
  subject[@name=Subject] { "subject" }
  label[@name=Label] { "label" }
  has[@name=Has] { "has" }
  list[@name=List] { "list" }
  filename[@name=Filename] { "filename" }
  after[@name=After] { "after" }
  before[@name=Before] { "before" }
  older[@name=Older] { "older" }
  newer[@name=Newer] { "newer" }
  older_than[@name=OlderThan] { "older_than" }
  newer_than[@name=NewerThan] { "newer_than" }
  is[@name=Is] { "is" }
  in[@name=In] { "in" }
  deliveredto[@name=Deliveredto] { "deliveredto" }
  category[@name=Category] { "category" }
  size[@name=Size] { "size" }
  larger[@name=Larger] { "larger" }
  smaller[@name=Smaller] { "smaller" }
}

@detectDelim
